{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/DrJartBestSellers.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // 공통 컴포넌트 임포트 \n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Card from \"../components/Card\";\nimport \"../styles/src/BestSellers.scss\"; // api / mock data \n// import dataObj from \"../assets/data/data_renewed\";\n// import { brand1 } from '../components/Card';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dataArr = []; // API \n\nconst url = 'http://localhost:9090/items/drjart';\n\nconst asyncDrjartGet = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(\"GET request to server done!! No problem! - 닥터자르트!!\");\n    console.log(data);\n    dataArr = data; // console.log(\"dataArr => \", dataArr.data[0]);\n  } catch (error) {\n    console.log(\"GET request XXXXXX - 닥터자르트!!\");\n  }\n};\n\nasyncDrjartGet(); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\nfunction DrJartBestSellers() {\n  _s();\n\n  let cardLen = 0;\n  const skinTypes = [];\n  const itemNames = [];\n  const itemPrices = [];\n  const itemFeatures = [];\n  const imageLink = [];\n  const productLink = [];\n  console.log(dataArr.data);\n  console.log(Array.isArray(dataArr.data)); // true\n\n  dataArr.data.forEach(each => {\n    skinTypes.push(each.skinType);\n    itemNames.push(each.name);\n    itemPrices.push(each.price);\n    itemFeatures.push(each.itemFeature);\n    imageLink.push(each.imageLink);\n    productLink.push(each.productLink);\n    cardLen++;\n  }); // 원본 \n  // dataObj[brand1].forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n\n  const [cardController, setCardController] = useState(6); // reference:  https://codingbroker.tistory.com/123\n\n  const renderItemCard = () => {\n    const result = [];\n\n    for (let i = 0; i < cardController; i++) {\n      result.push( /*#__PURE__*/_jsxDEV(Card, {\n        skinTypes: skinTypes[i],\n        itemNames: itemNames[i],\n        itemPrices: itemPrices[i],\n        itemFeatures: itemFeatures[i],\n        imageLink: imageLink[i],\n        productLink: productLink[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this));\n    }\n\n    return result;\n  };\n\n  const onClickShowMoreCards = () => {\n    if (cardController <= cardLen - 6) {\n      setCardController(cardController + 6);\n    } else {\n      setCardController(cardLen);\n    }\n\n    if (cardController === cardLen) {\n      alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bestSellerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dr.Jart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBCA0\\uC2A4\\uD2B8\\uC140\\uB7EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_inner\",\n          children: renderItemCard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_more_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClickShowMoreCards,\n            children: \"+\\uB354\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrJartBestSellers, \"XQrefsW7KuRNfjA+ZCyVZhGJgmA=\");\n\n_c = DrJartBestSellers;\nexport default DrJartBestSellers;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrJartBestSellers\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/DrJartBestSellers.js"],"names":["useState","Header","Footer","Card","dataArr","url","asyncDrjartGet","response","fetch","data","json","console","log","error","DrJartBestSellers","cardLen","skinTypes","itemNames","itemPrices","itemFeatures","imageLink","productLink","Array","isArray","forEach","each","push","skinType","name","price","itemFeature","cardController","setCardController","renderItemCard","result","i","onClickShowMoreCards","alert"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n// 공통 컴포넌트 임포트 \nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nimport Card from \"../components/Card\";\n\nimport \"../styles/src/BestSellers.scss\";\n\n// api / mock data \n// import dataObj from \"../assets/data/data_renewed\";\n// import { brand1 } from '../components/Card';\n\nlet dataArr = [];\n\n// API \nconst url = 'http://localhost:9090/items/drjart';\n\nconst asyncDrjartGet = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(\"GET request to server done!! No problem! - 닥터자르트!!\");\n    console.log(data);\n    dataArr = data;\n    // console.log(\"dataArr => \", dataArr.data[0]);\n  } catch(error) {\n    console.log(\"GET request XXXXXX - 닥터자르트!!\");\n  }\n} \nasyncDrjartGet();\n// reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n\nfunction DrJartBestSellers() {\n  let cardLen = 0;\n  const skinTypes = []; \n  const itemNames = []; \n  const itemPrices = []; \n  const itemFeatures = []; \n  const imageLink = []; \n  const productLink = []; \n\n\n  console.log(dataArr.data);\n  console.log(Array.isArray(dataArr.data));   // true\n  dataArr.data.forEach((each) => {\n    skinTypes.push(each.skinType);\n    itemNames.push(each.name);\n    itemPrices.push(each.price);\n    itemFeatures.push(each.itemFeature);\n    imageLink.push(each.imageLink);\n    productLink.push(each.productLink);\n    cardLen++;\n  });\n\n  // 원본 \n  // dataObj[brand1].forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n\n  const [cardController, setCardController] = useState(6);\n\n  // reference:  https://codingbroker.tistory.com/123\n  const renderItemCard = () => {\n    const result = [];\n    for (let i = 0; i < cardController; i++) {\n      result.push(<Card \n                    key={i} \n                    skinTypes={skinTypes[i]} \n                    itemNames={itemNames[i]}\n                    itemPrices={itemPrices[i]} \n                    itemFeatures={itemFeatures[i]}\n                    imageLink={imageLink[i]}\n                    productLink={productLink[i]}\n                  />\n      );            \n    }\n    return result;\n  };\n\n  const onClickShowMoreCards = () => {\n    if (cardController <= cardLen - 6) {\n      setCardController(cardController + 6);\n    } else {\n      setCardController(cardLen);\n    }\n\n    if (cardController === cardLen) {\n      alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n    } \n  };\n\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"bestSellerBox\">\n        <h2>Dr.Jart</h2>\n        <h3>베스트셀러</h3>\n        <div className=\"cards_area\">\n          <div className=\"cards_inner\">\n            {/* 여기에 Card.js 컴포넌트!! */}\n            {renderItemCard()}\n          </div>\n          <div className=\"cards_more_btn\">\n            <button type=\"button\" onClick={onClickShowMoreCards}>+더보기</button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  ) \n}\n\n\nexport default DrJartBestSellers;"]},"metadata":{},"sourceType":"module"}