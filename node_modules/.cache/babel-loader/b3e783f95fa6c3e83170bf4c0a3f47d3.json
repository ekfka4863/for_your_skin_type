{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/DrJartBestSellers.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\"; // 공통 컴포넌트 임포트 \n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Card from \"../components/Card\";\nimport \"../styles/src/BestSellers.scss\"; // api / mock data \n// import dataObj from \"../assets/data/data_renewed\";\n// import { brand1 } from '../components/Card';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DrJartBestSellers() {\n  _s();\n\n  let dataArr = useRef([]); // API \n\n  const url = 'http://localhost:9090/items/drjart';\n\n  const asyncDrjartGet = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"GET request to server done!! No problem! - 닥터자르트!!\");\n      console.log(data);\n      dataArr = data; // console.log(\"dataArr => \", dataArr.data[0]);\n\n      console.log(\"dataArr => \", dataArr.data); // console.log(\"dataArr => \", Array.isArray(dataArr.data));  // true\n\n      let cardLen = 0;\n      const skinTypes = [];\n      const itemNames = [];\n      const itemPrices = [];\n      const itemFeatures = [];\n      const imageLink = [];\n      const productLink = []; // console.log(dataArr.data);\n      // console.log(Array.isArray(dataArr.data));   // true\n\n      dataArr.data.forEach(each => {\n        skinTypes.push(each.skinType);\n        itemNames.push(each.name);\n        itemPrices.push(each.price);\n        itemFeatures.push(each.itemFeature);\n        imageLink.push(each.imageLink);\n        productLink.push(each.productLink);\n        cardLen++;\n      });\n\n      const renderItemCard = () => {\n        const result = [];\n\n        for (let i = 0; i < cardController; i++) {\n          result.push( /*#__PURE__*/_jsxDEV(Card, {\n            skinTypes: skinTypes[i],\n            itemNames: itemNames[i],\n            itemPrices: itemPrices[i],\n            itemFeatures: itemFeatures[i],\n            imageLink: imageLink[i],\n            productLink: productLink[i]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this));\n        }\n\n        return result;\n      };\n\n      const onClickShowMoreCards = () => {\n        if (cardController <= cardLen - 6) {\n          setCardController(cardController + 6);\n        } else {\n          setCardController(cardLen);\n        }\n\n        if (cardController === cardLen) {\n          alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n        }\n      };\n\n      renderItemCard();\n      onClickShowMoreCards();\n    } catch (error) {\n      console.log(\"GET request XXXXXX - 닥터자르트!!\");\n    }\n  };\n\n  asyncDrjartGet(); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n  // // console.log(\"dataArr ==> \", dataArr.current);   // []\n  // let cardLen = 0;\n  // const skinTypes = []; \n  // const itemNames = []; \n  // const itemPrices = []; \n  // const itemFeatures = []; \n  // const imageLink = []; \n  // const productLink = []; \n  // // console.log(dataArr.data);\n  // // console.log(Array.isArray(dataArr.data));   // true\n  // dataArr.data.forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n  // 원본 \n  // dataObj[brand1].forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n\n  const [cardController, setCardController] = useState(6); // reference:  https://codingbroker.tistory.com/123\n  // const renderItemCard = () => {\n  //   const result = [];\n  //   for (let i = 0; i < cardController; i++) {\n  //     result.push(<Card \n  //                   key={i} \n  //                   skinTypes={skinTypes[i]} \n  //                   itemNames={itemNames[i]}\n  //                   itemPrices={itemPrices[i]} \n  //                   itemFeatures={itemFeatures[i]}\n  //                   imageLink={imageLink[i]}\n  //                   productLink={productLink[i]}\n  //                 />\n  //     );            \n  //   }\n  //   return result;\n  // };\n  // const onClickShowMoreCards = () => {\n  //   if (cardController <= cardLen - 6) {\n  //     setCardController(cardController + 6);\n  //   } else {\n  //     setCardController(cardLen);\n  //   }\n  //   if (cardController === cardLen) {\n  //     alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n  //   } \n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bestSellerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dr.Jart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBCA0\\uC2A4\\uD2B8\\uC140\\uB7EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_more_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClickShowMoreCards,\n            children: \"+\\uB354\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrJartBestSellers, \"lKgMfntvWvP+ZyfwcfBtRwwBzks=\");\n\n_c = DrJartBestSellers;\nexport default DrJartBestSellers;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrJartBestSellers\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/DrJartBestSellers.js"],"names":["useState","useRef","Header","Footer","Card","DrJartBestSellers","dataArr","url","asyncDrjartGet","response","fetch","data","json","console","log","cardLen","skinTypes","itemNames","itemPrices","itemFeatures","imageLink","productLink","forEach","each","push","skinType","name","price","itemFeature","renderItemCard","result","i","cardController","onClickShowMoreCards","setCardController","alert","error"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\n// 공통 컴포넌트 임포트 \nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nimport Card from \"../components/Card\";\n\nimport \"../styles/src/BestSellers.scss\";\n\n// api / mock data \n// import dataObj from \"../assets/data/data_renewed\";\n// import { brand1 } from '../components/Card';\n\n\n\n\nfunction DrJartBestSellers() {\n  let dataArr = useRef([]);\n\n  // API \n  const url = 'http://localhost:9090/items/drjart';\n\n  const asyncDrjartGet = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"GET request to server done!! No problem! - 닥터자르트!!\");\n      console.log(data);\n      dataArr = data;\n      // console.log(\"dataArr => \", dataArr.data[0]);\n      console.log(\"dataArr => \", dataArr.data);\n      // console.log(\"dataArr => \", Array.isArray(dataArr.data));  // true\n\n      let cardLen = 0;\n      const skinTypes = []; \n      const itemNames = []; \n      const itemPrices = []; \n      const itemFeatures = []; \n      const imageLink = []; \n      const productLink = []; \n    \n    \n      // console.log(dataArr.data);\n      // console.log(Array.isArray(dataArr.data));   // true\n      dataArr.data.forEach((each) => {\n        skinTypes.push(each.skinType);\n        itemNames.push(each.name);\n        itemPrices.push(each.price);\n        itemFeatures.push(each.itemFeature);\n        imageLink.push(each.imageLink);\n        productLink.push(each.productLink);\n        cardLen++;\n      });\n\n        const renderItemCard = () => {\n          const result = [];\n          for (let i = 0; i < cardController; i++) {\n            result.push(<Card \n                          key={i} \n                          skinTypes={skinTypes[i]} \n                          itemNames={itemNames[i]}\n                          itemPrices={itemPrices[i]} \n                          itemFeatures={itemFeatures[i]}\n                          imageLink={imageLink[i]}\n                          productLink={productLink[i]}\n                        />\n            );            \n          }\n          return result;\n        };\n\n        const onClickShowMoreCards = () => {\n          if (cardController <= cardLen - 6) {\n            setCardController(cardController + 6);\n          } else {\n            setCardController(cardLen);\n          }\n\n          if (cardController === cardLen) {\n            alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n          } \n        };\n      renderItemCard();\n      onClickShowMoreCards();\n\n    } catch(error) {\n      console.log(\"GET request XXXXXX - 닥터자르트!!\");\n    }\n  } \n  asyncDrjartGet();\n  // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n\n  // // console.log(\"dataArr ==> \", dataArr.current);   // []\n  // let cardLen = 0;\n  // const skinTypes = []; \n  // const itemNames = []; \n  // const itemPrices = []; \n  // const itemFeatures = []; \n  // const imageLink = []; \n  // const productLink = []; \n\n\n  // // console.log(dataArr.data);\n  // // console.log(Array.isArray(dataArr.data));   // true\n  // dataArr.data.forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n\n  // 원본 \n  // dataObj[brand1].forEach((each) => {\n  //   skinTypes.push(each.skinType);\n  //   itemNames.push(each.name);\n  //   itemPrices.push(each.price);\n  //   itemFeatures.push(each.itemFeature);\n  //   imageLink.push(each.imageLink);\n  //   productLink.push(each.productLink);\n  //   cardLen++;\n  // });\n\n  const [cardController, setCardController] = useState(6);\n\n  // reference:  https://codingbroker.tistory.com/123\n  // const renderItemCard = () => {\n  //   const result = [];\n  //   for (let i = 0; i < cardController; i++) {\n  //     result.push(<Card \n  //                   key={i} \n  //                   skinTypes={skinTypes[i]} \n  //                   itemNames={itemNames[i]}\n  //                   itemPrices={itemPrices[i]} \n  //                   itemFeatures={itemFeatures[i]}\n  //                   imageLink={imageLink[i]}\n  //                   productLink={productLink[i]}\n  //                 />\n  //     );            \n  //   }\n  //   return result;\n  // };\n\n  // const onClickShowMoreCards = () => {\n  //   if (cardController <= cardLen - 6) {\n  //     setCardController(cardController + 6);\n  //   } else {\n  //     setCardController(cardLen);\n  //   }\n\n  //   if (cardController === cardLen) {\n  //     alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n  //   } \n  // };\n\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"bestSellerBox\">\n        <h2>Dr.Jart</h2>\n        <h3>베스트셀러</h3>\n        <div className=\"cards_area\">\n          <div className=\"cards_inner\">\n            {/* 여기에 Card.js 컴포넌트!! */}\n            {/* {renderItemCard()} */}\n          </div>\n          <div className=\"cards_more_btn\">\n            <button type=\"button\" onClick={onClickShowMoreCards}>+더보기</button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  ) \n}\n\n\nexport default DrJartBestSellers;"]},"metadata":{},"sourceType":"module"}