{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/SidmoolBestSellers.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // 공통 컴포넌트 임포트 \n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Card from \"../components/Card\";\nimport \"../styles/src/BestSellers.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidmoolBestSellers() {\n  _s();\n\n  // state\n  let userId = \"\";\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    // 무한 루프가 되지 않게 ... useEffect 안에 넣기!\n    if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n      setLoggedIn(true);\n      userId = localStorage.getItem(\"authenticatedId\"); // console.log(userId);   // e.g. sj100@gmail.com\n    }\n  }, []);\n  const [apiData, setApiData] = useState([]);\n  const [dataArr, setDataArr] = useState([]);\n  let cardLen = 0;\n  const skinTypes = [];\n  const itemNames = [];\n  const itemPrices = [];\n  const itemFeatures = [];\n  const imageLink = [];\n  const productLink = [];\n  const [cardController, setCardController] = useState(6); // API \n  // const url = 'http://localhost:9090/items/sidmool';\n\n  const url = '/items/sidmool';\n  useEffect(() => {\n    const asyncSidmoolGet = async () => {\n      try {\n        const response = await axios.get(url);\n        setApiData(response.data); // console.log(response.data);\n        // console.log(apiData);  // []\n      } catch (error) {\n        console.log(\"GET request XXXXXX - 시드물!!\");\n      }\n    };\n\n    asyncSidmoolGet();\n  }, []);\n  useEffect(() => {\n    setDataArr({ ...apiData\n    });\n  }, [apiData]);\n\n  if (Array.isArray(dataArr.data)) {\n    dataArr.data.forEach(each => {\n      // console.log(each.skinType);\n      skinTypes.push(each.skinType);\n      itemNames.push(each.name);\n      itemPrices.push(each.price);\n      itemFeatures.push(each.itemFeature);\n      imageLink.push(each.imageLink);\n      productLink.push(each.productLink);\n      cardLen++;\n    });\n  } // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n  // reference:  https://codingbroker.tistory.com/123\n\n\n  const renderItemCard = () => {\n    const result = [];\n\n    for (let i = 0; i < cardController; i++) {\n      result.push( /*#__PURE__*/_jsxDEV(Card, {\n        skinTypes: skinTypes[i],\n        itemNames: itemNames[i],\n        itemPrices: itemPrices[i],\n        itemFeatures: itemFeatures[i],\n        imageLink: imageLink[i],\n        productLink: productLink[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this));\n    }\n\n    return result;\n  };\n\n  const onClickShowMoreCards = () => {\n    // console.log(\"cardLen => \", cardLen);\n    if (cardController <= cardLen - 6) {\n      setCardController(cardController + 6); // console.log(\"cardLen => \", cardLen);\n    } else {\n      setCardController(cardLen);\n    }\n\n    if (cardController === cardLen) {\n      alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bestSellerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sidmool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBCA0\\uC2A4\\uD2B8\\uC140\\uB7EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_inner\",\n          children: renderItemCard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_more_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClickShowMoreCards,\n            children: \"+\\uB354\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidmoolBestSellers, \"8uPbwMSMV6Dgf3pOuMpIQRw1M9c=\");\n\n_c = SidmoolBestSellers;\nexport default SidmoolBestSellers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidmoolBestSellers\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/SidmoolBestSellers.js"],"names":["useState","useEffect","Header","Footer","Card","axios","SidmoolBestSellers","userId","loggedIn","setLoggedIn","localStorage","getItem","apiData","setApiData","dataArr","setDataArr","cardLen","skinTypes","itemNames","itemPrices","itemFeatures","imageLink","productLink","cardController","setCardController","url","asyncSidmoolGet","response","get","data","error","console","log","Array","isArray","forEach","each","push","skinType","name","price","itemFeature","renderItemCard","result","i","onClickShowMoreCards","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\n\n// 공통 컴포넌트 임포트 \nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Card from \"../components/Card\";\n\nimport \"../styles/src/BestSellers.scss\";\n\nimport axios from \"axios\";\n\n\n\nfunction SidmoolBestSellers() {\n  // state\n  let userId = \"\";\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // 무한 루프가 되지 않게 ... useEffect 안에 넣기!\n    if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n      setLoggedIn(true);\n      userId = localStorage.getItem(\"authenticatedId\");\n      // console.log(userId);   // e.g. sj100@gmail.com\n    }\n  }, []);\n\n  const [apiData, setApiData] = useState([]);\n  const [dataArr, setDataArr] = useState([]);\n\n  let cardLen = 0; \n  const skinTypes = []; \n  const itemNames = []; \n  const itemPrices = []; \n  const itemFeatures = []; \n  const imageLink = []; \n  const productLink = []; \n  const [cardController, setCardController] = useState(6);\n\n\n  // API \n  // const url = 'http://localhost:9090/items/sidmool';\n  const url = '/items/sidmool';\n\n  useEffect(() => {\n    const asyncSidmoolGet = async () => {\n      try {\n        const response = await axios.get(url);\n        setApiData(response.data);\n        // console.log(response.data);\n        // console.log(apiData);  // []\n      } catch (error) {\n        console.log(\"GET request XXXXXX - 시드물!!\");\n      }\n    };\n\n    asyncSidmoolGet();\n  }, []);\n\n  useEffect(() => {\n    setDataArr({...apiData});\n  }, [apiData]);\n\n  \n  if (Array.isArray(dataArr.data)) {\n    dataArr.data.forEach(each => {\n      // console.log(each.skinType);\n      skinTypes.push(each.skinType);\n      itemNames.push(each.name);\n      itemPrices.push(each.price);\n      itemFeatures.push(each.itemFeature);\n      imageLink.push(each.imageLink);\n      productLink.push(each.productLink);\n      cardLen++;\n    });\n  }\n  // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n  // reference:  https://codingbroker.tistory.com/123\n\n\n  \n  const renderItemCard = () => {\n    const result = [];\n    for (let i = 0; i < cardController; i++) {\n      result.push(<Card \n                    key={i} \n                    skinTypes={skinTypes[i]} \n                    itemNames={itemNames[i]}\n                    itemPrices={itemPrices[i]} \n                    itemFeatures={itemFeatures[i]}\n                    imageLink={imageLink[i]}\n                    productLink={productLink[i]}\n                  />\n      );            \n    }\n    return result;\n  };\n\n  \n  const onClickShowMoreCards = () => {\n    // console.log(\"cardLen => \", cardLen);\n    if (cardController <= cardLen - 6) {\n      setCardController(cardController + 6);\n      // console.log(\"cardLen => \", cardLen);\n    } else {\n      setCardController(cardLen);\n    }\n\n    if (cardController === cardLen) {\n      alert(\"더 많은 제품을 보시려면 해당 화장품 브랜드 사이트를 방문해주십시오. 감사합니다!\");\n    } \n  };\n\n\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      {/* <div className=\"test\">시드물 베스트셀러 들어올 페이지!!</div> */}\n      <div id=\"bestSellerBox\">\n        <h2>Sidmool</h2>\n        <h3>베스트셀러</h3>\n        <div className=\"cards_area\">\n          <div className=\"cards_inner\">\n            {/* 여기에 Card.js 컴포넌트!! */}\n            {/* <Card \n              skinTypes={skinTypes[0]} \n              itemNames={itemNames[0]}\n              itemPrices={itemPrices[0]} \n              itemFeatures={itemFeatures[0]}\n            />  */}\n            {renderItemCard()}\n          </div>\n          <div className=\"cards_more_btn\">\n            <button type=\"button\" onClick={onClickShowMoreCards} >+더보기</button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  ) \n}\n\n\nexport default SidmoolBestSellers;"]},"metadata":{},"sourceType":"module"}