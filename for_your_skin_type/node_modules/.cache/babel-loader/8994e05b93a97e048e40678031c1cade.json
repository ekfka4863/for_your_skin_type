{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/components/MyPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\"; // 공통 components\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\"; // styling \n\nimport \"../styles/src/MyPage.scss\"; // Context API \n\nimport AuthContext from \"../context/auth-context\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyPage() {\n  _s();\n\n  const [userData, setUserData] = useState({}); // Context API \n\n  let userLoggedIn = useContext(AuthContext); // console.log(userLoggedIn);\n  // API \n  // const url = 'http://localhost:9090/mypage';\n\n  const url = '/mypage';\n  useEffect(() => {\n    // 무한 루프가 되지 않게 ... useEffect 안에 넣기!\n    if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n      userLoggedIn.userId = localStorage.getItem(\"authenticateId\");\n      userLoggedIn.isLoggedIn = true;\n    } // console.log(userLoggedIn.isLoggedIn);   // 로그인 후에는 -> 26\n\n  }, []);\n  useEffect(() => {\n    const asyncLoggedInIdGet = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(\"data ===> \", data); // {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', password: 'sj1', phoneNumber: '39248092384'}\n\n        userLoggedIn.userName = data.name;\n        userLoggedIn.userPhoneNumber = data.phoneNumber;\n        userLoggedIn.userEmail = data.email;\n        userLoggedIn.userGender = data.gender;\n        setUserData({\n          userName: data.name,\n          userPhoneNumber: data.phoneNumber,\n          userEmail: data.email,\n          userGender: data.gender\n        }); // console.log(\"userData => \", userData);  // {userName: '생쥐10', userPhoneNumber: '32948329048', userEmail: 'sj10@gmail.com', userGender: 'woman'}\n      } catch (error) {\n        console.log(\"GET request XXXXXX!! - 마이페이지!!\");\n      }\n    };\n\n    asyncLoggedInIdGet();\n  }, [setUserData]); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n  // }, [userData, setUserData]); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n  const renderMyPage = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  console.log(userLoggedIn);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AuthContext.Consumer, {\n      children: () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Mypage_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), renderMyPage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyPage, \"2dD0Xg5O70aZKs+6++1y5+E3sFY=\");\n\n_c = MyPage;\nexport default MyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/components/MyPage.js"],"names":["useState","useEffect","useContext","Header","Footer","AuthContext","MyPage","userData","setUserData","userLoggedIn","url","localStorage","getItem","userId","isLoggedIn","asyncLoggedInIdGet","response","fetch","data","json","console","log","userName","name","userPhoneNumber","phoneNumber","userEmail","email","userGender","gender","error","renderMyPage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAO,2BAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CADgB,CAEhB;;AACA,MAAIS,YAAY,GAAGP,UAAU,CAACG,WAAD,CAA7B,CAHgB,CAIhB;AAGA;AACA;;AACA,QAAMK,GAAG,GAAG,SAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIU,YAAY,CAACC,OAAb,CAAqB,iBAArB,MAA4C,EAA5C,IAAkDD,YAAY,CAACC,OAAb,CAAqB,iBAArB,MAA4C,IAAlG,EAAwG;AACtGH,MAAAA,YAAY,CAACI,MAAb,GAAsBF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAtB;AACAH,MAAAA,YAAY,CAACK,UAAb,GAA0B,IAA1B;AACD,KALa,CAMd;;AACD,GAPQ,EAON,EAPM,CAAT;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,kBAAkB,GAAG,YAAY;AACrC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,CAA5B;AACA,cAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B,EAJE,CAIgC;;AAElCT,QAAAA,YAAY,CAACa,QAAb,GAAwBJ,IAAI,CAACK,IAA7B;AACAd,QAAAA,YAAY,CAACe,eAAb,GAA+BN,IAAI,CAACO,WAApC;AACAhB,QAAAA,YAAY,CAACiB,SAAb,GAAyBR,IAAI,CAACS,KAA9B;AACAlB,QAAAA,YAAY,CAACmB,UAAb,GAA0BV,IAAI,CAACW,MAA/B;AAEArB,QAAAA,WAAW,CAAC;AACVc,UAAAA,QAAQ,EAAEJ,IAAI,CAACK,IADL;AAEVC,UAAAA,eAAe,EAAEN,IAAI,CAACO,WAFZ;AAGVC,UAAAA,SAAS,EAAER,IAAI,CAACS,KAHN;AAIVC,UAAAA,UAAU,EAAEV,IAAI,CAACW;AAJP,SAAD,CAAX,CAXE,CAkBF;AACD,OAnBD,CAmBE,OAAMC,KAAN,EAAa;AACbV,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,KAvBD;;AAwBAN,IAAAA,kBAAkB;AACnB,GA1BQ,EA0BN,CAACP,WAAD,CA1BM,CAAT,CArBgB,CA+CG;AACnB;;AAGA,QAAMuB,YAAY,GAAG,MAAM;AACzB,wBACE,qCADF;AAKD,GAND;;AAQAX,EAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AAIA,sBACA;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD,CAAa,QAAb;AAAA,gBAEG,MAAM;AACL,4BACE;AAAA,iCACE;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGsB,YAAY,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,yBADF;AAUD;AAbH;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADA;AAqBD;;GApFQzB,M;;KAAAA,M;AAuFT,eAAeA,MAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\n\n// 공통 components\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n// styling \nimport \"../styles/src/MyPage.scss\"\n\n// Context API \nimport AuthContext from \"../context/auth-context\";\n\n\nfunction MyPage() {\n  const [userData, setUserData] = useState({});\n  // Context API \n  let userLoggedIn = useContext(AuthContext); \n  // console.log(userLoggedIn);\n  \n\n  // API \n  // const url = 'http://localhost:9090/mypage';\n  const url = '/mypage';\n  \n  useEffect(() => {\n    // 무한 루프가 되지 않게 ... useEffect 안에 넣기!\n    if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n      userLoggedIn.userId = localStorage.getItem(\"authenticateId\");\n      userLoggedIn.isLoggedIn = true;\n    }\n    // console.log(userLoggedIn.isLoggedIn);   // 로그인 후에는 -> 26\n  }, [])\n\n\n  useEffect(() => {\n    const asyncLoggedInIdGet = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        \n        console.log(\"data ===> \", data);  // {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', password: 'sj1', phoneNumber: '39248092384'}\n\n        userLoggedIn.userName = data.name;\n        userLoggedIn.userPhoneNumber = data.phoneNumber;\n        userLoggedIn.userEmail = data.email;\n        userLoggedIn.userGender = data.gender;\n\n        setUserData({\n          userName: data.name,\n          userPhoneNumber: data.phoneNumber,\n          userEmail: data.email,\n          userGender: data.gender\n        });\n\n        // console.log(\"userData => \", userData);  // {userName: '생쥐10', userPhoneNumber: '32948329048', userEmail: 'sj10@gmail.com', userGender: 'woman'}\n      } catch(error) {\n        console.log(\"GET request XXXXXX!! - 마이페이지!!\");\n      }\n    } \n    asyncLoggedInIdGet();\n  }, [setUserData]); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n  // }, [userData, setUserData]); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n\n  const renderMyPage = () => {\n    return (\n      <>\n\n      </>\n    )\n  };\n  \n  console.log(userLoggedIn);\n  \n\n\n  return (\n  <>\n    <Header />\n    <AuthContext.Consumer>\n      {/* {(ctx) => { */}\n      {() => {\n        return (\n          <>\n            <div id='Mypage_wrap'>\n              <h1>마이페이지</h1>\n\n              {/* form 자리! */}\n              {renderMyPage()}\n            </div>\n          </>\n        )\n      }}\n    </AuthContext.Consumer>\n    <Footer />\n  </>\n  )\n}\n\n\nexport default MyPage;"]},"metadata":{},"sourceType":"module"}