{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/components/LogInSection.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // components \n\nimport LoggedInPage from \"../pages/LoggedInPage\"; // styling \n\nimport \"../styles/src/LogInSection.scss\"; // Context API \n\nimport AuthContext from \"../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogInSection() {\n  _s();\n\n  // Context API \n  let userLoggedIn = useContext(AuthContext); // console.log(userLoggedIn);  // {userId: '', isLoggedIn: false}\n  // useNavigate \n\n  let navigate = useNavigate();\n\n  const moveToMyPage = () => {\n    navigate(\"/my-page\");\n  }; // reference: https://velog.io/@soryeongk/ReactRouterDomV6\n\n\n  const renderLoggedInPage = () => {\n    navigate(\"/logged-in-page\");\n  }; // 로그인 로직\n\n\n  const [userId, setUserId] = useState(\"\");\n  const [userPwLogin, setUserPwLogin] = useState(\"\"); // const url = 'http://localhost:9090/login';\n\n  const url = '/login';\n\n  const submitToLogIn = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          userId,\n          userPwLogin\n        })\n      });\n      const data = await response.json(); // console.log(data);  // data: {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', …}\n      // console.log(typeof data === 'object');   // true\n\n      if (typeof data === 'object') {\n        alert(\"정상적으로 로그인 되었습니다.\"); // console.log(userLoggedIn);    // {userId: '', isLoggedIn: false}\n\n        userLoggedIn.userId = data.data.email;\n        userLoggedIn.isLoggedIn = !userLoggedIn.isLoggedIn; // console.log(userLoggedIn);    // {userId: 'sj1@gmail.com', isLoggedIn: false}\n\n        localStorage.setItem(\"authenticatedId\", userId);\n      } else {\n        alert(\"입력하신 아이디와 비밀번호를 확인해주세요.\");\n      }\n    } catch (error) {\n      console.log(\"POST request XXXXXX!! - LoginSignup.js \");\n    }\n  }; // reference:  https://www.youtube.com/watch?v=OUP-urBy1k4\n  // 새로 고침해도 로그인한 상태로 남을 수 있게 ... localStorage에 저장한 값 활용!\n\n\n  if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n    userLoggedIn.userId = localStorage.getItem(\"authenticatedId\");\n    userLoggedIn.isLoggedIn = true;\n  } // console.log(userLoggedIn);  // e.g.{userId: 'sj1@gmail.com', isLoggedIn: true}\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Consumer, {\n    children: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: userLoggedIn.isLoggedIn === false && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitToLogIn,\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Login_Id_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require('../assets/img/laptop/user_email.png'),\n                alt: \"\\uC544\\uC774\\uB514\\uC774\\uBBF8\\uC9C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"userId\",\n                placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n                onChange: e => setUserId(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"userId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Pw_Id_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require('../assets/img/laptop/user_pw.png'),\n                alt: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC774\\uBBF8\\uC9C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"userPW\",\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n                onChange: e => setUserPwLogin(e.target.value),\n                required: true,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"userPW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login_button\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogInSection, \"N0zLGDzIi4Sgu+J4cuzGw8T50Kk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LogInSection;\nexport default LogInSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInSection\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/components/LogInSection.js"],"names":["useState","useContext","useEffect","useNavigate","LoggedInPage","AuthContext","LogInSection","userLoggedIn","navigate","moveToMyPage","renderLoggedInPage","userId","setUserId","userPwLogin","setUserPwLogin","url","submitToLogIn","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","alert","email","isLoggedIn","localStorage","setItem","error","console","log","getItem","require","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// components \nimport LoggedInPage from \"../pages/LoggedInPage\";\n\n// styling \nimport \"../styles/src/LogInSection.scss\";\n\n// Context API \nimport AuthContext from \"../context/auth-context\";\n\n\n\nfunction LogInSection () {\n  \n  // Context API \n  let userLoggedIn = useContext(AuthContext); \n  // console.log(userLoggedIn);  // {userId: '', isLoggedIn: false}\n\n  // useNavigate \n  let navigate = useNavigate();\n\n  const moveToMyPage = () => {\n    navigate(\"/my-page\");\n  };// reference: https://velog.io/@soryeongk/ReactRouterDomV6\n\n  const renderLoggedInPage = () => {\n    navigate(\"/logged-in-page\");\n  };\n\n  \n  // 로그인 로직\n  const [userId, setUserId] = useState(\"\");\n  const [userPwLogin, setUserPwLogin] = useState(\"\");\n  \n  // const url = 'http://localhost:9090/login';\n  const url = '/login';\n\n  const submitToLogIn = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST', \n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          userId, \n          userPwLogin\n        })\n      });\n      \n      const data = await response.json(); \n      // console.log(data);  // data: {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', …}\n      // console.log(typeof data === 'object');   // true\n\n      if (typeof data === 'object') {\n        alert(\"정상적으로 로그인 되었습니다.\");\n        // console.log(userLoggedIn);    // {userId: '', isLoggedIn: false}\n        userLoggedIn.userId = data.data.email;\n        userLoggedIn.isLoggedIn = !userLoggedIn.isLoggedIn;\n        // console.log(userLoggedIn);    // {userId: 'sj1@gmail.com', isLoggedIn: false}\n\n        localStorage.setItem(\"authenticatedId\", userId);\n      } else {\n        alert(\"입력하신 아이디와 비밀번호를 확인해주세요.\");\n      }\n    } catch (error) {\n      console.log(\"POST request XXXXXX!! - LoginSignup.js \");\n    } \n  };  // reference:  https://www.youtube.com/watch?v=OUP-urBy1k4\n  \n  \n\n\n\n  // 새로 고침해도 로그인한 상태로 남을 수 있게 ... localStorage에 저장한 값 활용!\n  if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n    userLoggedIn.userId = localStorage.getItem(\"authenticatedId\");\n    userLoggedIn.isLoggedIn = true;\n  }\n\n  // console.log(userLoggedIn);  // e.g.{userId: 'sj1@gmail.com', isLoggedIn: true}\n\n  return (\n    <AuthContext.Consumer>\n      {() => {\n        return (\n          <>\n            {(userLoggedIn.isLoggedIn === false) && (\n              <form onSubmit={submitToLogIn}>\n                <ul className=\"Login_Id_box\">\n                  <li>\n                    <img src={require('../assets/img/laptop/user_email.png')} alt=\"아이디이미지\"></img>\n                  </li>\n                  <li>\n                    <input type=\"email\" id=\"userId\" placeholder=\"아이디를 입력하세요.\" onChange={e => setUserId(e.target.value)} required></input>\n                    <label for=\"userId\"></label>\n                  </li>\n                </ul>\n                {/* 패스워드 박스 */}\n                <ul className=\"Pw_Id_box\">\n                  <li>\n                    <img src={require('../assets/img/laptop/user_pw.png')} alt=\"비밀번호 이미지\"></img>\n                  </li>\n                  <li>\n                    <input type=\"password\" id=\"userPW\" placeholder=\"비밀번호를 입력하세요.\" onChange={e => setUserPwLogin(e.target.value)} required  autocomplete=\"off\"></input>\n                    <label for=\"userPW\"></label>\n                  </li>\n                </ul>\n                {/* 버튼박스 */}\n                <div className=\"Login_button\">\n                  <input type=\"submit\" value=\"로그인\"></input>\n                </div>\n              </form>\n            )}\n          </>)\n        }\n      }\n    </AuthContext.Consumer>\n  )\n}\n\nexport default LogInSection;"]},"metadata":{},"sourceType":"module"}