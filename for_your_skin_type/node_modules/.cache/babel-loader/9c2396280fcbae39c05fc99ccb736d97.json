{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/MyCart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useEffect, useState } from \"react\"; // 공통 컴포넌트 임포트 \n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\"; // components\n\nimport Card from \"../components/Card\";\nimport data from \"../pages/LoginSignup\"; // styling \n\nimport \"../styles/src/MyCart.scss\"; // POST request 보내기 전 임의로 사용자 정하기 ... \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user1 = {\n  id: 1,\n  email: 'user1@gmail.com',\n  password: 'user1_password',\n  name: '박유저',\n  gender: 'woman',\n  phoneNumber: '01012345678',\n  sessionId: \"~~~~\"\n}; // // for signup api to bring data of certain user's favorite items\n// // const url = 'http://localhost:9090/login';\n// // import data from \"../pages/LoginSignup\"; \n// console.log(\"data => \", data);\n// // const sessionId = sessionStorage.getItem(data).sessionId;\n// // console.log(\"sessionId in MyCart.js => \", sessionId);\n// // 저희가 원하는 것: 세션아이디가 지금 로그인 된 아이디의 유저에게 있는지 확인하고, \n// 상품을 장바구니에 추가하고 싶을 때 보내는 POST request\n\nif (user1.loggedIn === true) {\n  // API\n  // const url = 'http://localhost:9090/items/favoritesAdd';   // url 확인하기!\n  const url = '/items/favoritesAdd'; // url 확인하기!\n\n  const asyncFavoriteItemsAddPost = async () => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          member: {\n            email: 'user1@gmail.com'\n          },\n          item: {\n            // e.g. 장바구니에 저장하고 싶은 아이템을 보내기 \n            \"id\": 3,\n            // api에서 id받아오는지 확인할 것!\n            \"name\": \"시카페어 크림 (호랑이의해 코스터증정)\",\n            \"price\": \"48000\",\n            \"priceSign\": \"원\",\n            \"brand\": \"drjart\",\n            \"imageLink\": \"https://image.drjart.com/img/001/1640964208443.png\",\n            \"productLink\": \"https://www.drjart.co.kr/ko/prd/view/707?activeTopGnb=all\",\n            \"websiteLink\": \"https://www.drjart.co.kr/ko/main/index\",\n            \"itemFeature\": \"크림형\",\n            \"skinType\": \"지성\"\n          }\n        })\n      });\n      const data = await response.json();\n      console.log(\"POST request to server done!! No problem!\");\n      console.log(data);\n    } catch (error) {\n      console.log(\"POST request XXXXXX!! - 장바구니\");\n    }\n  };\n\n  asyncFavoriteItemsAddPost();\n} else {// alert(\"장바구니는 로그인 후 이용할 수 있는 서비스입니다.\");\n} // 상품을 장바구니에서 삭제하고 싶을 때 보내는 POST request\n\n\nif (user1.loggedIn === true) {\n  const url = 'http://localhost:9090/items/favoritesDelete'; // url 확인하기!\n\n  const asyncFavoriteItemsDeletePost = async () => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          member: {\n            email: 'user1@gmail.com'\n          },\n          item: {\n            // e.g. 장바구니에 저장하고 싶은 아이템을 보내기 \n            \"id\": 3,\n            // api에서 id받아오는지 확인할 것!\n            \"name\": \"시카페어 크림 (호랑이의해 코스터증정)\",\n            \"price\": \"48000\",\n            \"priceSign\": \"원\",\n            \"brand\": \"drjart\",\n            \"imageLink\": \"https://image.drjart.com/img/001/1640964208443.png\",\n            \"productLink\": \"https://www.drjart.co.kr/ko/prd/view/707?activeTopGnb=all\",\n            \"websiteLink\": \"https://www.drjart.co.kr/ko/main/index\",\n            \"itemFeature\": \"크림형\",\n            \"skinType\": \"지성\"\n          }\n        })\n      });\n      const data = await response.json();\n      console.log(\"POST request to server done!! No problem!\");\n      console.log(data);\n    } catch (error) {\n      console.log(\"POST request XXXXXX!!\");\n    }\n  };\n\n  asyncFavoriteItemsDeletePost();\n} else {// alert(\"장바구니는 로그인 후 이용할 수 있는 서비스입니다.\");\n} // 진짜 컴포넌트 \n\n\nfunction MyCart() {\n  _s();\n\n  let myFavoriteItems = [];\n  const [myFavoritesNum, setMyFavoritesNum] = useState(0);\n\n  const addFavoriteItems = () => {\n    setMyFavoritesNum(myFavoritesNum++);\n    myFavoriteItems.push({// 카드에 들어갈 정보 담기...\n    });\n  };\n\n  const removeFavoriteItems = () => {\n    setMyFavoritesNum(myFavoritesNum--);\n  }; // useEffect(() => {\n  //   // renderItemCard()\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myCartBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blind\",\n        children: \"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4! gusw\\uC704\\uC2DC\\uB9AC\\uC2A4\\uD2B8\\uB97C \\uD574\\uB2F9 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uD655\\uC778\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorite_items_total_num\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total_num\",\n          children: [\"Total: \", myFavoritesNum, \" item(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorite_items_area\",\n        children: myFavoritesNum === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty_cart\",\n          children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uAC00 \\uBE44\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // renderItemCard()\n        // <Card />\n        _jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyCart, \"p9jNugmP9VLygKgabEHBwTKDYCA=\");\n\n_c = MyCart;\nexport default MyCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCart\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/pages/MyCart.js"],"names":["React","Component","useEffect","useState","Header","Footer","Card","data","user1","id","email","password","name","gender","phoneNumber","sessionId","loggedIn","url","asyncFavoriteItemsAddPost","response","fetch","method","headers","body","JSON","stringify","member","item","json","console","log","error","asyncFavoriteItemsDeletePost","MyCart","myFavoriteItems","myFavoritesNum","setMyFavoritesNum","addFavoriteItems","push","removeFavoriteItems"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { useEffect, useState } from \"react\";\n\n// 공통 컴포넌트 임포트 \nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\n// components\nimport Card from \"../components/Card\";\nimport data from \"../pages/LoginSignup\"; \n\n\n// styling \nimport \"../styles/src/MyCart.scss\";\n\n\n\n\n// POST request 보내기 전 임의로 사용자 정하기 ... \nconst user1 = {\n  id: 1,\n  email: 'user1@gmail.com',\n  password:'user1_password', \n  name: '박유저',\n  gender: 'woman',\n  phoneNumber: '01012345678',\n  sessionId: \"~~~~\",\n};\n\n\n// // for signup api to bring data of certain user's favorite items\n// // const url = 'http://localhost:9090/login';\n// // import data from \"../pages/LoginSignup\"; \n\n// console.log(\"data => \", data);\n\n// // const sessionId = sessionStorage.getItem(data).sessionId;\n// // console.log(\"sessionId in MyCart.js => \", sessionId);\n// // 저희가 원하는 것: 세션아이디가 지금 로그인 된 아이디의 유저에게 있는지 확인하고, \n\n\n// 상품을 장바구니에 추가하고 싶을 때 보내는 POST request\nif (user1.loggedIn === true) {\n\n  // API\n  // const url = 'http://localhost:9090/items/favoritesAdd';   // url 확인하기!\n  const url = '/items/favoritesAdd';   // url 확인하기!\n\n  const asyncFavoriteItemsAddPost = async () => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          member: {\n            email: 'user1@gmail.com'\n          },\n          item: {\n              // e.g. 장바구니에 저장하고 싶은 아이템을 보내기 \n              \"id\": 3, // api에서 id받아오는지 확인할 것!\n              \"name\": \"시카페어 크림 (호랑이의해 코스터증정)\",\n              \"price\": \"48000\",\n              \"priceSign\": \"원\",\n              \"brand\": \"drjart\",\n              \"imageLink\": \"https://image.drjart.com/img/001/1640964208443.png\",\n              \"productLink\": \"https://www.drjart.co.kr/ko/prd/view/707?activeTopGnb=all\",\n              \"websiteLink\": \"https://www.drjart.co.kr/ko/main/index\",\n              \"itemFeature\": \"크림형\",\n              \"skinType\": \"지성\"\n            }\n        })\n      });\n      const data = await response.json();\n      console.log(\"POST request to server done!! No problem!\");\n      console.log(data);\n    } catch(error) {\n      console.log(\"POST request XXXXXX!! - 장바구니\");\n    }\n  } \n  asyncFavoriteItemsAddPost();\n} else {\n  // alert(\"장바구니는 로그인 후 이용할 수 있는 서비스입니다.\");\n}\n\n\n\n// 상품을 장바구니에서 삭제하고 싶을 때 보내는 POST request\nif (user1.loggedIn === true) {\n  const url = 'http://localhost:9090/items/favoritesDelete';   // url 확인하기!\n  const asyncFavoriteItemsDeletePost = async () => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        },\n        body: JSON.stringify({\n          member: {\n            email: 'user1@gmail.com'\n          },\n          item: {\n              // e.g. 장바구니에 저장하고 싶은 아이템을 보내기 \n              \"id\": 3, // api에서 id받아오는지 확인할 것!\n              \"name\": \"시카페어 크림 (호랑이의해 코스터증정)\",\n              \"price\": \"48000\",\n              \"priceSign\": \"원\",\n              \"brand\": \"drjart\",\n              \"imageLink\": \"https://image.drjart.com/img/001/1640964208443.png\",\n              \"productLink\": \"https://www.drjart.co.kr/ko/prd/view/707?activeTopGnb=all\",\n              \"websiteLink\": \"https://www.drjart.co.kr/ko/main/index\",\n              \"itemFeature\": \"크림형\",\n              \"skinType\": \"지성\"\n            }\n        })\n      });\n      const data = await response.json();\n      console.log(\"POST request to server done!! No problem!\");\n      console.log(data);\n    } catch(error) {\n      console.log(\"POST request XXXXXX!!\");\n    }\n  } \n  asyncFavoriteItemsDeletePost();\n} else {\n  // alert(\"장바구니는 로그인 후 이용할 수 있는 서비스입니다.\");\n}\n\n\n\n// 진짜 컴포넌트 \nfunction MyCart () {\n  let myFavoriteItems = [];\n\n  const [myFavoritesNum, setMyFavoritesNum] = useState(0); \n  \n  const addFavoriteItems = () => {\n    setMyFavoritesNum(myFavoritesNum++);\n    myFavoriteItems.push({\n      // 카드에 들어갈 정보 담기...\n    });\n  };\n  const removeFavoriteItems = () => {\n    setMyFavoritesNum(myFavoritesNum--);\n  };\n\n  // useEffect(() => {\n  //   // renderItemCard()\n  // }, []);\n  \n  return (\n    <div id=\"wrap\">\n      <Header />\n\n      <div id=\"myCartBox\">\n        <h2 className=\"blind\">환영합니다! gusw위시리스트를 해당 페이지에서 확인하세요.</h2>  \n        <div className=\"favorite_items_total_num\">\n          <h3>장바구니</h3>\n          {/* <div className=\"total_num\">Total: {___} item(s)</div> */}\n          <div className=\"total_num\">Total: {myFavoritesNum} item(s)</div>\n        </div>\n        <div className=\"favorite_items_area\">\n          {/* 여기에 Card.js 컴포넌트!! \n            -> 만약 Card 컴포넌트가 하나도 없으면 \"장바구니가 비어있습니다.\"라고 나타내기!? \n          */}\n          {\n            (myFavoritesNum === 0) \n              ? \n            <div className=\"empty_cart\">장바구니가 비어있습니다</div>\n              : \n              // renderItemCard()\n            // <Card />\n            <Card />\n          }\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\n\nexport default MyCart;  \n\n\n\n"]},"metadata":{},"sourceType":"module"}