{"ast":null,"code":"var _jsxFileName = \"/Users/dayepark/Documents/dev/for_your_skin_type/src/components/MyPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from \"react\"; // 공통 components\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\"; // styling \n\nimport \"../styles/src/Mypage.scss\"; // Context API \n\nimport AuthContext from \"../context/auth-context\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyPage() {\n  _s();\n\n  // Context API \n  let userLoggedIn = useContext(AuthContext);\n\n  if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n    userLoggedIn.userId = localStorage.getItem(\"authenticateId\");\n    userLoggedIn.isLoggedIn = true;\n  } // API \n  // const url = 'http://localhost:9090/mypage';\n\n\n  const url = '/mypage';\n  useEffect(() => {\n    const asyncLoggedInIdGet = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(\"data ===> \", data); // {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', password: 'sj1', phoneNumber: '39248092384'}\n\n        userLoggedIn.userName = data.name;\n        userLoggedIn.userPhoneNumber = data.phoneNumber;\n        userLoggedIn.userEmail = data.email;\n        userLoggedIn.userGender = data.gender;\n        console.log(\"userLoggedIn.userName => \", userLoggedIn.userName); // e.g. 생쥐1\n\n        console.log(\"userLoggedIn.userPhoneNumber => \", userLoggedIn.userPhoneNumber); // e.g. 39248092384\n\n        console.log(\"userLoggedIn.userEmail => \", userLoggedIn.userEmail); // e.g.  sj1@gmail.com\n\n        console.log(\"userLoggedIn.userGender => \", userLoggedIn.userGender); // e.g. woman\n      } catch (error) {\n        console.log(\"GET request XXXXXX!! - 마이페이지!!\");\n      }\n    };\n\n    asyncLoggedInIdGet();\n  }, []); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n  const renderMyPage = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AuthContext.Consumer, {\n      children: () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Mypage_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyPage, \"wJCxKOJesvLKEwpJppMRECX18rc=\");\n\n_c = MyPage;\nexport default MyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["/Users/dayepark/Documents/dev/for_your_skin_type/src/components/MyPage.js"],"names":["useEffect","useContext","Header","Footer","AuthContext","MyPage","userLoggedIn","localStorage","getItem","userId","isLoggedIn","url","asyncLoggedInIdGet","response","fetch","data","json","console","log","userName","name","userPhoneNumber","phoneNumber","userEmail","email","userGender","gender","error","renderMyPage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAO,2BAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAEhB;AACA,MAAIC,YAAY,GAAGL,UAAU,CAACG,WAAD,CAA7B;;AAEA,MAAIG,YAAY,CAACC,OAAb,CAAqB,iBAArB,MAA4C,EAA5C,IAAkDD,YAAY,CAACC,OAAb,CAAqB,iBAArB,MAA4C,IAAlG,EAAwG;AACtGF,IAAAA,YAAY,CAACG,MAAb,GAAsBF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAtB;AACAF,IAAAA,YAAY,CAACI,UAAb,GAA0B,IAA1B;AACD,GARe,CAWhB;AACA;;;AACA,QAAMC,GAAG,GAAG,SAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,kBAAkB,GAAG,YAAY;AACrC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,cAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B,EAJE,CAIgC;;AAElCT,QAAAA,YAAY,CAACa,QAAb,GAAwBJ,IAAI,CAACK,IAA7B;AACAd,QAAAA,YAAY,CAACe,eAAb,GAA+BN,IAAI,CAACO,WAApC;AACAhB,QAAAA,YAAY,CAACiB,SAAb,GAAyBR,IAAI,CAACS,KAA9B;AACAlB,QAAAA,YAAY,CAACmB,UAAb,GAA0BV,IAAI,CAACW,MAA/B;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCZ,YAAY,CAACa,QAAtD,EAZE,CAYiE;;AACnEF,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDZ,YAAY,CAACe,eAA7D,EAbE,CAa+E;;AACjFJ,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CZ,YAAY,CAACiB,SAAvD,EAdE,CAcmE;;AACrEN,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CZ,YAAY,CAACmB,UAAxD,EAfE,CAeqE;AAExE,OAjBD,CAiBE,OAAME,KAAN,EAAa;AACbV,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,KArBD;;AAsBAN,IAAAA,kBAAkB;AACnB,GAxBQ,EAwBN,EAxBM,CAAT,CAfgB,CAuCR;;AAGR,QAAMgB,YAAY,GAAG,MAAM;AACzB,wBACE,qCADF;AAKD,GAND;;AASA,sBACA;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD,CAAa,QAAb;AAAA,gBACG,MAAM;AACL,4BACE;AAAA,iCACE;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,yBADF;AASD;AAXH;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADA;AAmBD;;GAtEQvB,M;;KAAAA,M;AAyET,eAAeA,MAAf","sourcesContent":["import { useEffect, useContext } from \"react\";\n\n// 공통 components\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n// styling \nimport \"../styles/src/Mypage.scss\"\n\n// Context API \nimport AuthContext from \"../context/auth-context\";\n\n\nfunction MyPage() {\n\n  // Context API \n  let userLoggedIn = useContext(AuthContext); \n\n  if (localStorage.getItem(\"authenticatedId\") !== \"\" && localStorage.getItem(\"authenticatedId\") !== null) {\n    userLoggedIn.userId = localStorage.getItem(\"authenticateId\");\n    userLoggedIn.isLoggedIn = true;\n  }\n\n\n  // API \n  // const url = 'http://localhost:9090/mypage';\n  const url = '/mypage';\n  \n  useEffect(() => {\n    const asyncLoggedInIdGet = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        console.log(\"data ===> \", data);  // {id: 83, name: '생쥐1', age: 0, gender: 'woman', email: 'sj1@gmail.com', password: 'sj1', phoneNumber: '39248092384'}\n        \n        userLoggedIn.userName = data.name;\n        userLoggedIn.userPhoneNumber = data.phoneNumber;\n        userLoggedIn.userEmail = data.email;\n        userLoggedIn.userGender = data.gender;\n\n\n        console.log(\"userLoggedIn.userName => \", userLoggedIn.userName);   // e.g. 생쥐1\n        console.log(\"userLoggedIn.userPhoneNumber => \", userLoggedIn.userPhoneNumber);   // e.g. 39248092384\n        console.log(\"userLoggedIn.userEmail => \", userLoggedIn.userEmail);   // e.g.  sj1@gmail.com\n        console.log(\"userLoggedIn.userGender => \", userLoggedIn.userGender);   // e.g. woman\n\n      } catch(error) {\n        console.log(\"GET request XXXXXX!! - 마이페이지!!\");\n      }\n    } \n    asyncLoggedInIdGet();\n  }, []); // reference:  https://stackoverflow.com/questions/50046841/proper-way-to-make-api-fetch-post-with-async-await\n\n\n  const renderMyPage = () => {\n    return (\n      <>\n      \n      </>\n    )\n  };\n\n\n  return (\n  <>\n    <Header />\n    <AuthContext.Consumer>\n      {() => {\n        return (\n          <>\n            <div id='Mypage_wrap'>\n              <h1>마이페이지</h1>\n\n              {/* form 자리! */}\n            </div>\n          </>\n        )\n      }}\n    </AuthContext.Consumer>\n    <Footer />\n  </>\n  )\n}\n\n\nexport default MyPage;"]},"metadata":{},"sourceType":"module"}